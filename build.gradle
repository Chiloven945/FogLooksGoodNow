plugins.apply 'fabric-loom'

version = "${property('mod.version')}+${stonecutter.current().version()}"

repositories {
    mavenCentral()
    mavenLocal()

    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url 'https://maven.wispforest.io' }
    maven { url 'https://maven.imb11.dev/releases' }
    maven { url "https://maven.isxander.dev/releases" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://maven.quiltmc.org/repository/release" }
    maven { url 'https://maven.terraformersmc.com/releases' }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current().version()}"
    mappings "net.fabricmc:yarn:${property('deps.yarn')}:v2"

    modImplementation "net.fabricmc:fabric-loader:${property('deps.fabric_loader')}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_api')}"

    include modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${property("deps.yacl_version")}")
    modImplementation "com.mineblock11:MRU:${property("deps.mru_version")}"

    modRuntimeOnly modCompileOnly("com.terraformersmc:modmenu:${property("runtime.modmenu_version")}")

    modImplementation "maven.modrinth:sodium:${property("runtime.sodium_version")}"
    modImplementation "maven.modrinth:iris:${property("runtime.iris_version")}"
    // Libs required by Iris
    implementation ("io.github.douira:glsl-transformer:2.0.0")
    implementation ("org.antlr:antlr4-runtime:4.11.1")
    implementation ("org.anarres:jcpp:1.4.14")
}

loom {
    accessWidenerPath = file("../../src/main/resources/flg.accesswidener")

    runConfigs.server.ideConfigGenerated = false
}
validateAccessWidener.enabled = false

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    archivesBaseName = "${property('mod.name')}-${version}"
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'mod_version': version, 'target_minecraft': project.property('mod.target')
    }
}

jar {
    archiveClassifier.set 'dev'

    from rootProject.file('LICENSE')
}

if (stonecutter.current().isActiveVersion()) {
    rootProject.tasks.register('buildActive') {
        setGroup 'project'

        dependsOn tasks.getByName('build')
    }
}
